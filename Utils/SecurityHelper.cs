using System;using System.Security.Cryptography;using System.Text;namespace LojaConstrucao.Utils{public static class SecurityHelper{public static string HashPassword(string password){if(string.IsNullOrWhiteSpace(password))throw new ArgumentException("Password cannot be null");using var sha256=SHA256.Create();var salt=GenerateSalt();var saltedPassword=password+salt;var hashedBytes=sha256.ComputeHash(Encoding.UTF8.GetBytes(saltedPassword));var combined=salt+Convert.ToBase64String(hashedBytes);return Convert.ToBase64String(Encoding.UTF8.GetBytes(combined));}public static bool VerifyPassword(string password,string hashedPassword){try{if(string.IsNullOrWhiteSpace(password)||string.IsNullOrWhiteSpace(hashedPassword))return false;var combined=Encoding.UTF8.GetString(Convert.FromBase64String(hashedPassword));var salt=combined.Substring(0,16);var hash=combined.Substring(16);using var sha256=SHA256.Create();var saltedPassword=password+salt;var hashedBytes=sha256.ComputeHash(Encoding.UTF8.GetBytes(saltedPassword));var newHash=Convert.ToBase64String(hashedBytes);return hash==newHash;}catch{return false;}}private static string GenerateSalt(){const string chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";var random=new Random();var salt=new StringBuilder(16);for(int i=0;i<16;i++){salt.Append(chars[random.Next(chars.Length)]);}return salt.ToString();}}}